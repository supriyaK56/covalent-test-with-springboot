{"version":3,"file":"abstract-control-value-accesor.js","sourceRoot":"","sources":["abstract-control-value-accesor.ts"],"names":[],"mappings":"AAEA,IAAM,IAAI,GAAQ;IAChB,eAAe;AACjB,CAAC,CAAC;AAEF;IAAA;QAEE;;WAEG;QACO,WAAM,GAAQ,SAAS,CAAC;QA0BlC,aAAQ,GAAG,UAAC,CAAM,IAAK,OAAA,IAAI,EAAJ,CAAI,CAAC;QAC5B,cAAS,GAAG,cAAM,OAAA,IAAI,EAAJ,CAAI,CAAC;IACzB,CAAC;IAzBC,sBAAI,+CAAK;QADT,qDAAqD;aACrD,cAAmB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;aACxC,UAAU,CAAM;YACd,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;gBAChB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACnB,CAAC;QACH,CAAC;;;OANuC;IAAA,CAAC;IAQzC;;OAEG;IACH,iDAAU,GAAV,UAAW,KAAU;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAED,uDAAgB,GAAhB,UAAiB,EAAO;QACtB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,wDAAiB,GAAjB,UAAkB,EAAO;QACvB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;IAIH,mCAAC;AAAD,CAAC,AAjCD,IAiCC","sourcesContent":["import { ControlValueAccessor } from '@angular/forms';\n\nconst noop: any = () => {\n  // empty method\n};\n\nexport abstract class AbstractControlValueAccessor implements ControlValueAccessor {\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  protected _value: any = undefined;\n\n  // get/set accessor (needed for ControlValueAccessor)\n  get value(): any { return this._value; };\n  set value(v: any) {\n    if (v !== this._value) {\n      this._value = v;\n      this.onChange(v);\n    }\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  onChange = (_: any) => noop;\n  onTouched = () => noop;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}