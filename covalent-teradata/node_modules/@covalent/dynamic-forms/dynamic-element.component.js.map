{"version":3,"file":"dynamic-element.component.js","sourceRoot":"","sources":["dynamic-element.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,WAAW,EAAU,MAAM,eAAe,CAAC;AACjF,OAAO,EAAE,SAAS,EAAE,gBAAgB,EAAE,MAAM,eAAe,CAAC;AAC5D,OAAO,EAAE,wBAAwB,EAAgB,UAAU,EAAE,MAAM,eAAe,CAAC;AACnF,OAAO,EAAwB,iBAAiB,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAEtF,OAAO,EAAmC,qBAAqB,EAAE,MAAM,kCAAkC,CAAC;AAC1G,OAAO,EAAE,4BAA4B,EAAE,MAAM,mDAAmD,CAAC;AAEjG,IAAM,IAAI,GAAQ;IAChB,eAAe;AACjB,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,oCAAoC,GAAQ;IACvD,OAAO,EAAE,iBAAiB;IAC1B,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,yBAAyB,EAAzB,CAAyB,CAAC;IACxD,KAAK,EAAE,IAAI;CACZ,CAAC;AAKF,IAAa,yBAAyB;IACpC,mCAAmB,aAA+B;QAA/B,kBAAa,GAAb,aAAa,CAAkB;IAAI,CAAC;IACzD,gCAAC;AAAD,CAAC,AAFD,IAEC;AAFY,yBAAyB;IAHrC,SAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;KACjC,CAAC;qCAEkC,gBAAgB;GADvC,yBAAyB,CAErC;SAFY,yBAAyB;AAStC,IAAa,yBAAyB;IAAS,6CAA4B;IAmEzE,mCAAoB,yBAAmD,EACnD,oBAA2C;QAD/D,YAEE,iBAAO,SACR;QAHmB,+BAAyB,GAAzB,yBAAyB,CAA0B;QACnD,0BAAoB,GAApB,oBAAoB,CAAuB;QApD/D;;WAEG;QACM,WAAK,GAAW,EAAE,CAAC;QAE5B;;;WAGG;QACM,UAAI,GAAqC,SAAS,CAAC;QAE5D;;WAEG;QACM,cAAQ,GAAY,SAAS,CAAC;QAEvC;;WAEG;QACM,SAAG,GAAW,SAAS,CAAC;QAEjC;;WAEG;QACM,SAAG,GAAW,SAAS,CAAC;QAEjC;;WAEG;QACM,gBAAU,GAAU,SAAS,CAAC;QA0DvC,mBAAa,GAAG,UAAC,CAAM,IAAK,OAAA,IAAI,EAAJ,CAAI,CAAC;;IAjCjC,CAAC;IAnED,sBAAI,4CAAK;aAAT,UAAU,CAAM;YACd,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;gBAChB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YACxB,CAAC;QACH,CAAC;;;OAAA;IAyCD,sBAAI,2CAAI;aAAR;YACE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACpE,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;;;OAAA;IAGD,sBAAI,8CAAO;aAAX;YACE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;QAClB,CAAC;;;OAAA;IAGD,sBAAI,8CAAO;aAAX;YACE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;QAClB,CAAC;;;OAAA;IAOD,4CAAQ,GAAR;QAAA,iBAsBC;QArBC,IAAI,GAAG,GAAsB,IAAI,CAAC,yBAAyB;YACzD,uBAAuB,CAAC,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC9E,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACpD,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACrD,GAAG,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAC3C,GAAG,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAChC,GAAG,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC9B,GAAG,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAClC,GAAG,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QACtC,GAAG,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QAC5B,GAAG,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QAC5B,GAAG,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAC1C,GAAG,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAC,KAAU;YACvC,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,qBAAqB,CAAC,UAAC,KAAU;YACpC,6CAA6C;YAC7C,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzB,GAAG,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;YAC7B,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,yDAAqB,GAArB,UAAsB,EAAO;QAC3B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;IAC1B,CAAC;IAGH,gCAAC;AAAD,CAAC,AAxGD,CAA+C,4BAA4B,GAwG1E;AA1FU;IAAR,KAAK,EAAE;8BAAiB,WAAW;iEAAC;AAK5B;IAAR,KAAK,EAAE;;wDAAoB;AAMnB;IAAR,KAAK,EAAE;;uDAAoD;AAKnD;IAAR,KAAK,EAAE;;2DAA+B;AAK9B;IAAR,KAAK,EAAE;;sDAAyB;AAKxB;IAAR,KAAK,EAAE;;sDAAyB;AAKxB;IAAR,KAAK,EAAE;;6DAA+B;AAED;IAArC,SAAS,CAAC,yBAAyB,CAAC;8BAAe,yBAAyB;+DAAC;AAG9E;IADC,WAAW,CAAC,WAAW,CAAC;;;qDAMxB;AAGD;IADC,WAAW,CAAC,UAAU,CAAC;;;wDAGvB;AAGD;IADC,WAAW,CAAC,UAAU,CAAC;;;wDAGvB;AAjEU,yBAAyB;IALrC,SAAS,CAAC;QACT,SAAS,EAAE,CAAE,qBAAqB,EAAE,oCAAoC,CAAE;QAC1E,QAAQ,EAAE,oBAAoB;QAC9B,QAAQ,EAAE,gCAAgC;KAC3C,CAAC;qCAoE+C,wBAAwB;QAC7B,qBAAqB;GApEpD,yBAAyB,CAwGrC;SAxGY,yBAAyB","sourcesContent":["import { Component, Directive, Input, HostBinding, OnInit } from '@angular/core';\nimport { ViewChild, ViewContainerRef } from '@angular/core';\nimport { ComponentFactoryResolver, ComponentRef, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\n\nimport { TdDynamicElement, TdDynamicType, TdDynamicFormsService } from './services/dynamic-forms.service';\nimport { AbstractControlValueAccessor } from './dynamic-elements/abstract-control-value-accesor';\n\nconst noop: any = () => {\n  // empty method\n};\n\nexport const ELEMENT_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TdDynamicElementComponent),\n  multi: true,\n};\n\n@Directive({\n  selector: '[tdDynamicContainer]',\n})\nexport class TdDynamicElementDirective {\n  constructor(public viewContainer: ViewContainerRef) { }\n}\n\n@Component({\n  providers: [ TdDynamicFormsService, ELEMENT_INPUT_CONTROL_VALUE_ACCESSOR ],\n  selector: 'td-dynamic-element',\n  template: '<div tdDynamicContainer></div>',\n})\nexport class TdDynamicElementComponent extends AbstractControlValueAccessor\n                                       implements ControlValueAccessor, OnInit {\n\n  set value(v: any) {\n    if (v !== this._value) {\n      this._value = v;\n      this.onChange(v);\n      this.onModelChange(v);\n    }\n  }\n\n  /**\n   * Sets form control of the element.\n   */\n  @Input() dynamicControl: FormControl;\n\n  /**\n   * Sets label to be displayed.\n   */\n  @Input() label: string = '';\n\n  /**\n   * Sets type or element of element to be rendered.\n   * Throws error if does not exist or no supported.\n   */\n  @Input() type: TdDynamicElement | TdDynamicType = undefined;\n\n  /**\n   * Sets required validation checkup (if supported by element).\n   */\n  @Input() required: boolean = undefined;\n\n  /**\n   * Sets min validation checkup (if supported by element).\n   */\n  @Input() min: number = undefined;\n\n  /**\n   * Sets max validation checkup (if supported by element).\n   */\n  @Input() max: number = undefined;\n\n  /**\n   * Sets selections for array elements (if supported by element).\n   */\n  @Input() selections: any[] = undefined;\n\n  @ViewChild(TdDynamicElementDirective) childElement: TdDynamicElementDirective;\n\n  @HostBinding('attr.flex')\n  get flex(): any {\n    if (this.type) {\n      return this._dynamicFormsService.getDefaultElementFlex(this.type);\n    }\n    return true;\n  }\n\n  @HostBinding('attr.max')\n  get maxAttr(): any {\n    return this.max;\n  }\n\n  @HostBinding('attr.min')\n  get minAttr(): any {\n    return this.min;\n  }\n\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver,\n              private _dynamicFormsService: TdDynamicFormsService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    let ref: ComponentRef<any> = this._componentFactoryResolver.\n      resolveComponentFactory(this._dynamicFormsService.getDynamicElement(this.type))\n      .create(this.childElement.viewContainer.injector);\n    this.childElement.viewContainer.insert(ref.hostView);\n    ref.instance.control = this.dynamicControl;\n    ref.instance.label = this.label;\n    ref.instance.type = this.type;\n    ref.instance._value = this._value;\n    ref.instance.required = this.required;\n    ref.instance.min = this.min;\n    ref.instance.max = this.max;\n    ref.instance.selections = this.selections;\n    ref.instance.registerOnChange((value: any) => {\n      this.value = value;\n    });\n    this.registerOnModelChange((value: any) => {\n      // fix to check if value is NaN (type=number)\n      if (!Number.isNaN(value)) {\n        ref.instance.value = value;\n      }\n    });\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  registerOnModelChange(fn: any): void {\n    this.onModelChange = fn;\n  }\n\n  onModelChange = (_: any) => noop;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}