{"version":3,"file":"dynamic-forms.component.js","sourceRoot":"","sources":["dynamic-forms.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup, FormBuilder, AbstractControl } from '@angular/forms';\n\nimport { TdDynamicFormsService, ITdDynamicElementConfig } from './services/dynamic-forms.service';\n\n@Component({\n  selector: 'td-dynamic-forms',\n  templateUrl: './dynamic-forms.component.html',\n})\nexport class TdDynamicFormsComponent {\n\n  private _elements: ITdDynamicElementConfig[];\n\n  dynamicForm: FormGroup;\n\n  /**\n   * elements: ITdDynamicElementConfig[]\n   * JS Object that will render the elements depending on its config.\n   * [name] property is required.\n   */\n  @Input('elements')\n  set elements(elements: ITdDynamicElementConfig[]){\n    if (elements) {\n      if (this._elements) {\n        this._elements.forEach((elem: ITdDynamicElementConfig) => {\n          this.dynamicForm.removeControl(elem.name);\n        });\n      }\n      let duplicates: string[] = [];\n      elements.forEach((elem: ITdDynamicElementConfig) => {\n        this._dynamicFormsService.validateDynamicElementName(elem.name);\n        if (duplicates.indexOf(elem.name) > -1) {\n          throw new Error(`Dynamic element name: \"${elem.name}\" is duplicated`);\n        }\n        duplicates.push(elem.name);\n        this.dynamicForm.registerControl(elem.name, this._dynamicFormsService.createFormControl(elem));\n      });\n      this._elements = elements;\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n  get elements(): ITdDynamicElementConfig[] {\n    return this._elements;\n  }\n\n  /**\n   * Getter property for dynamic [FormGroup].\n   */\n  get form(): FormGroup {\n    return this.dynamicForm;\n  }\n\n  /**\n   * Getter property for [valid] of dynamic [FormGroup].\n   */\n  get valid(): boolean {\n    if (this.dynamicForm) {\n      return this.dynamicForm.valid;\n    }\n    return false;\n  }\n\n  /**\n   * Getter property for [value] of dynamic [FormGroup].\n   */\n  get value(): any {\n    if (this.dynamicForm) {\n      return this.dynamicForm.value;\n    }\n    return {};\n  }\n\n  /**\n   * Getter property for [errors] of dynamic [FormGroup].\n   */\n  get errors(): {[name: string]: any} {\n    if (this.dynamicForm) {\n      let errors: {[name: string]: any} = {};\n      for (let name in this.dynamicForm.controls) {\n        errors[name] = this.dynamicForm.controls[name].errors;\n      }\n      return errors;\n    }\n    return {};\n  }\n\n  /**\n   * Getter property for [controls] of dynamic [FormGroup].\n   */\n  get controls(): {[key: string]: AbstractControl} {\n    if (this.dynamicForm) {\n      return this.dynamicForm.controls;\n    }\n    return {};\n  }\n\n  constructor(private _formBuilder: FormBuilder,\n              private _dynamicFormsService: TdDynamicFormsService,\n              private _changeDetectorRef: ChangeDetectorRef) {\n    this.dynamicForm = this._formBuilder.group({});\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}