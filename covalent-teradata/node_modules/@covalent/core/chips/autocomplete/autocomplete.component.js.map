{"version":3,"file":"autocomplete.component.js","sourceRoot":"","sources":["autocomplete.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, Output, forwardRef } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nconst noop: () => void = () => {\n  // empty method\n};\n\nexport const TD_AUTOCOMPLETE_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TdAutoCompleteComponent),\n  multi: true,\n};\n\n@Component({\n  providers: [ TD_AUTOCOMPLETE_CONTROL_VALUE_ACCESSOR ],\n  selector: 'td-autocomplete',\n  styleUrls: ['./autocomplete.component.css'],\n  templateUrl: './autocomplete.component.html',\n})\nexport class TdAutoCompleteComponent implements ControlValueAccessor {\n\n  private _value: any = '';\n  /** Callback registered via registerOnTouched (ControlValueAccessor) */\n  private _onTouchedCallback: () => void = noop;\n  /** Callback registered via registerOnChange (ControlValueAccessor) */\n  private _onChangeCallback: (_: any) => void = noop;\n\n  listName: string = this.randomName();\n\n  @Input('name') name: string;\n  @Input('dividerColor') dividerColor: 'primary' | 'accent' | 'warn' = 'primary';\n  @Input('placeholder') placeholder: string;\n  @Input('searchItems') searchItems: string[] = [];\n  @Input('readOnly') readOnly: boolean = false;\n  @Input('required') required: boolean = false;\n  @Input('disabled') disabled: boolean = false;\n  @Input('autoFocus') autoFocus: boolean = false;\n  @Input('max') max: string | number;\n  @Input('maxLength') maxLength: number;\n  @Input('min') min: string | number;\n  @Input('minLength') minLength: number;\n\n  get value(): any { return this._value; };\n  @Input() set value(v: any) {\n    if (v !== this._value) {\n      this._value = v;\n      this._onChangeCallback(v);\n    }\n  }\n\n  @Output('itemSelect') itemSelect: EventEmitter<string> = new EventEmitter<string>();\n  @Output('focus') focus: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output('blur') blur: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  clear(): boolean {\n    this.writeValue('');\n    return true;\n  }\n\n  randomName(): string {\n    let text: string = '';\n    let possible: string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (let i: number = 0; i < 7; i++ ) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n\n    return text;\n  }\n\n  handleItemSelect(): void {\n    this.itemSelect.emit(this._value);\n  }\n\n  handleFocus(): void {\n    this.focus.emit(true);\n  }\n\n  handleBlur(): void {\n    this.blur.emit(false);\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * TODO: internal\n   */\n  writeValue(value: any): void {\n    this._value = value;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * TODO: internal\n   */\n  registerOnChange(fn: any): void {\n    this._onChangeCallback = fn;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * TODO: internal\n   */\n  registerOnTouched(fn: any): void {\n    this._onTouchedCallback = fn;\n  }\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}