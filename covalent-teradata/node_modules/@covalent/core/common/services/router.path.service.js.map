{"version":3,"file":"router.path.service.js","sourceRoot":"","sources":["router.path.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,MAAM,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AAG3D,IAAa,iBAAiB;IAE5B,2BAAoB,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;QACjC,IAAI,CAAC,OAAO,CAAC,MAAM;aAClB,MAAM,CAAC,UAAC,CAAM,IAAK,OAAA,CAAC,YAAY,gBAAgB,EAA7B,CAA6B,CAAC;aACjD,QAAQ,EAAE;aACV,SAAS,CAAC,UAAC,CAAQ;YAClB,mBAAiB,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC;QAC5D,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;MAGE;IACF,4CAAgB,GAAhB;QACE,MAAM,CAAC,mBAAiB,CAAC,cAAc,CAAC;IAC1C,CAAC;IACH,wBAAC;AAAD,CAAC,AAlBD,IAkBC;AAjBc,gCAAc,GAAW,GAAG,CAAC;AAD/B,iBAAiB;IAD7B,UAAU,EAAE;qCAGkB,MAAM;GAFxB,iBAAiB,CAkB7B;SAlBY,iBAAiB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router, RoutesRecognized } from '@angular/router';\n\n@Injectable()\nexport class RouterPathService {\nprivate static _previousRoute: string = '/';\n  constructor(private _router: Router) {\n    this._router.events\n    .filter((e: any) => e instanceof RoutesRecognized)\n    .pairwise()\n    .subscribe((e: any[]) => {\n      RouterPathService._previousRoute = e[0].urlAfterRedirects;\n    });\n  }\n\n  /*\n  * Utility function to get the route the user previously went to\n  * good for use in a \"back button\"\n  */\n  getPreviousRoute(): string {\n    return RouterPathService._previousRoute;\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}