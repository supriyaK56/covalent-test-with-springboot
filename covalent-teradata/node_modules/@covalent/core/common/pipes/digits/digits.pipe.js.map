{"version":3,"file":"digits.pipe.js","sourceRoot":"","sources":["digits.pipe.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,IAAI,EAAiB,MAAM,eAAe,CAAC;AAMpD,IAAa,YAAY;IAAzB;IAiBA,CAAC;IAhBC,qEAAqE;IACrE,gCAAS,GAAT,UAAU,MAAW,EAAE,SAAqB;QAArB,0BAAA,EAAA,aAAqB;QAC1C,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACjB,MAAM,CAAC,GAAG,CAAC;QACb,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACvC,oDAAoD;YACpD,MAAM,CAAC,gBAAgB,CAAC;QAC1B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACtB,MAAM,CAAC,MAAM,CAAC;QAChB,CAAC;QACD,IAAI,CAAC,GAAW,IAAI,CAAC;QACrB,IAAI,KAAK,GAAa,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACpD,IAAI,CAAC,GAAW,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3D,IAAI,IAAI,GAAW,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5B,MAAM,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC;IAC7F,CAAC;IACH,mBAAC;AAAD,CAAC,AAjBD,IAiBC;AAjBY,YAAY;IAJxB,IAAI,CAAC;QACJ,IAAI,EAAE,QAAQ;KACf,CAAC;GAEW,YAAY,CAiBxB;SAjBY,YAAY","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'digits',\n})\n\nexport class TdDigitsPipe implements PipeTransform {\n  /* `digits` needs to be type `digits: any` or TypeScript complains */\n  transform(digits: any, precision: number = 1): string {\n    if (digits === 0) {\n      return '0';\n    } else if (isNaN(parseInt(digits, 10))) {\n      /* If not a valid number, return 'Invalid Number' */\n      return 'Invalid Number';\n    } else if (digits < 1) {\n      return digits;\n    }\n    let k: number = 1000;\n    let sizes: string[] = ['', 'K', 'M', 'B', 'T', 'Q'];\n    let i: number = Math.floor(Math.log(digits) / Math.log(k));\n    let size: string = sizes[i];\n    return parseFloat((digits / Math.pow(k, i)).toFixed(precision)) + (size ? ' ' + size : '');\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}