{"version":3,"file":"toggle.directive.js","sourceRoot":"","sources":["toggle.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directive, ElementRef, Input, HostBinding, Renderer, AnimationPlayer } from '@angular/core';\n\n@Directive({\n  selector: '[tdToggle]',\n})\nexport class TdToggleDirective {\n\n  private _state: boolean;\n  private _hiddenState: boolean;\n  private _defaultDisplay: string;\n  private _timeoutNumber: number;\n\n  /**\n   * duration?: number\n   * Sets duration of toggle animation in miliseconds.\n   * Defaults to 150 ms.\n   */\n  @Input() duration: number = 150;\n\n  /**\n   * tdToggle: boolean\n   * Toggles element, hides if its 'true', shows if its 'false'.\n   */\n  @Input('tdToggle')\n  set state(state: boolean) {\n    this._state = state;\n    clearTimeout(this._timeoutNumber);\n    if (state) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /**\n   * Binds native 'aria-expanded' attribute.\n   */\n  @HostBinding('attr.aria-expanded')\n  get ariaExpandedBinding(): boolean {\n    return !this._state;\n  }\n\n  /**\n   * Binds native 'aria-hidden' attribute.\n   */\n  @HostBinding('attr.aria-hidden')\n  get ariaHiddenBinding(): boolean {\n    return this._state;\n  }\n\n  /**\n   * Binds 'hidden' attribute.\n   */\n  @HostBinding('hidden')\n  get hiddenBinding(): boolean {\n    return this._hiddenState ? true : undefined;\n  }\n\n  constructor(private _renderer: Renderer, private _element: ElementRef) {\n    this._defaultDisplay = this._element.nativeElement.style.display;\n  }\n\n  /**\n   * Hides element: sets \"display:[default]\" so animation is shown,\n   * starts animation and adds \"display:'none'\" style at the end.\n   */\n  hide(): void {\n    this._renderer.setElementStyle(this._element.nativeElement, 'display', this._defaultDisplay);\n    let animation: AnimationPlayer = this._renderer\n      .animate(this._element.nativeElement, undefined, [{\n          styles: {\n            styles: [\n              {'height': this._element.nativeElement.scrollHeight + 'px'},\n              {'overflow': 'hidden'},\n            ],\n          },\n          offset: 0,\n        }, {\n          styles: {\n            styles: [\n              {'height': 0},\n              {'overflow': 'hidden'},\n            ],\n          },\n          offset: 1,\n        },\n      ], this.duration, 0, 'ease-in');\n    animation.play();\n\n    /**\n     * Using timeout instead of onComplete since there is a bug if you start another animation\n     * before the previous one ends. The onComplete event is not executed.\n     * e.g. hide event started before show event is completed.\n     */\n    this._timeoutNumber = window.setTimeout(() => {\n      this._renderer.setElementStyle(this._element.nativeElement, 'display', 'none');\n      this._hiddenState = this._state;\n      animation.destroy();\n    }, this.duration);\n  }\n\n  /**\n   * Shows element: sets \"display:[default]\" so animation is shown,\n   * starts animation and adds \"display:[default]\" style again at the end.\n   */\n  show(): void {\n    this._hiddenState = this._state;\n\n    this._renderer.setElementStyle(this._element.nativeElement, 'display', this._defaultDisplay);\n    let startingAnimation: AnimationPlayer = this._renderer\n      .animate(this._element.nativeElement, undefined, [{\n          styles: {\n            styles: [\n              {'overflow': 'hidden'},\n            ],\n          },\n          offset: 0,\n        }, {\n          styles: {\n            styles: [\n              {'overflow': 'hidden'},\n            ],\n          },\n          offset: 1,\n        },\n      ], 0, 0, 'ease-in');\n    startingAnimation.play();\n    startingAnimation.onDone(() => {\n      startingAnimation.destroy();\n      let animation: AnimationPlayer = this._renderer\n        .animate(this._element.nativeElement, undefined, [{\n            styles: {\n              styles: [\n                {'height': 0},\n                {'overflow': 'hidden'},\n              ],\n            },\n            offset: 0,\n          }, {\n            styles: {\n              styles: [\n                {'height': this._element.nativeElement.scrollHeight + 'px'},\n                {'overflow': 'hidden'},\n              ],\n            },\n            offset: 1,\n          },\n        ], this.duration, 0, 'ease-in');\n      animation.play();\n\n      /**\n       * Using timeout instead of onComplete since there is a bug if you start another animation\n       * before the previous one ends. The onComplete event is not executed.\n       * e.g. hide event started before show event is completed.\n       */\n      this._timeoutNumber = window.setTimeout(() => {\n        this._renderer.setElementStyle(this._element.nativeElement, 'display', this._defaultDisplay);\n        animation.destroy();\n      }, this.duration);\n    });\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}