{"version":3,"file":"media-toggle.directive.js","sourceRoot":"","sources":["media-toggle.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directive, ElementRef, Input, OnInit, OnDestroy } from '@angular/core';\nimport { Renderer } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { TdMediaService } from '../services/media.service';\n\n@Directive({\n  selector: '[tdMediaToggle]',\n})\nexport class TdMediaToggleDirective implements OnInit, OnDestroy {\n\n  private _subscription: Subscription;\n\n  private _query: string;\n  private _matches: boolean = false;\n  private _attributes: {[key: string]: string} = {};\n  private _styles: {[key: string]: string} = {};\n  private _classes: string[] = [];\n\n  /**\n   * tdMediaToggle: string\n   * Media query used to evaluate screen/window size.\n   * Toggles attributes, classes and styles if media query is matched.\n   */\n  @Input('tdMediaToggle')\n  set query(query: string) {\n    if (!query) {\n      throw new Error('Query needed for [tdMediaToggle] directive.');\n    }\n    this._query = query;\n  }\n\n  /**\n   * mediaAttributes: {[key: string]: string}\n   * Attributes to be toggled when media query matches.\n   */\n  @Input('mediaAttributes')\n  set attributes(attributes: any) {\n    this._attributes = attributes;\n  }\n\n  /**\n   * mediaClasses: string[]\n   * CSS Classes to be toggled when media query matches.\n   */\n  @Input('mediaClasses')\n  set classes(classes: string[]) {\n    this._classes = classes;\n  }\n\n  /**\n   * mediaStyles: {[key: string]: string}\n   * CSS Styles to be toggled when media query matches.\n   */\n  @Input('mediaStyles')\n  set styles(styles: any) {\n    this._styles = styles;\n  }\n\n  constructor(private _renderer: Renderer, private _elementRef: ElementRef, private _mediaService: TdMediaService) { }\n\n  ngOnInit(): void {\n    this._mediaChange(this._mediaService.query(this._query));\n    this._subscription = this._mediaService.registerQuery(this._query).subscribe((matches: boolean) => {\n      this._mediaChange(matches);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._subscription.unsubscribe();\n  }\n\n  private _mediaChange(matches: boolean): void {\n    this._matches = matches;\n    this._changeAttributes();\n    this._changeClasses();\n    this._changeStyles();\n  }\n\n  private _changeAttributes(): void {\n    for (let attr in this._attributes) {\n      this._renderer.setElementAttribute(this._elementRef.nativeElement, attr,\n                                         this._matches ? this._attributes[attr] : undefined);\n    }\n  }\n\n  private _changeClasses(): void {\n    this._classes.forEach((className: string) => {\n      this._renderer.setElementClass(this._elementRef.nativeElement, className, this._matches);\n    });\n  }\n\n  private _changeStyles(): void {\n    for (let style in this._styles) {\n      this._renderer.setElementStyle(this._elementRef.nativeElement, style,\n                                         this._matches ? this._styles[style] : undefined);\n    }\n  }\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}