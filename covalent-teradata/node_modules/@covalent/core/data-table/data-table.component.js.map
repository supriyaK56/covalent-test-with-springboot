{"version":3,"file":"data-table.component.js","sourceRoot":"","sources":["data-table.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, Output, EventEmitter, forwardRef, ChangeDetectionStrategy, ChangeDetectorRef,\n         ContentChildren, TemplateRef, AfterContentInit, QueryList } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { ITdDataTableSortChangeEvent } from './data-table-column/data-table-column.component';\nimport { TdDataTableTemplateDirective } from './directives/data-table-template.directive';\n\nconst noop: any = () => {\n  // empty method\n};\n\nexport const TD_DATA_TABLE_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TdDataTableComponent),\n  multi: true,\n};\n\nexport enum TdDataTableSortingOrder {\n  Ascending = <any>'ASC',\n  Descending = <any>'DESC',\n};\n\nexport interface ITdDataTableColumn {\n  name: string;\n  label: string;\n  tooltip?: string;\n  numeric?: boolean;\n  format?: (value: any) => any;\n  nested?: boolean;\n};\n\nexport interface ITdDataTableSelectEvent {\n  row: any;\n  selected: boolean;\n};\n\nexport interface ITdDataTableSelectAllEvent {\n  rows: any[];\n  selected: boolean;\n}\n\n@Component({\n  providers: [ TD_DATA_TABLE_CONTROL_VALUE_ACCESSOR ],\n  selector: 'td-data-table',\n  styleUrls: ['./data-table.component.css'],\n  templateUrl: './data-table.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdDataTableComponent implements ControlValueAccessor, AfterContentInit {\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  private _value: any[] = [];\n  /** Callback registered via registerOnChange (ControlValueAccessor) */\n  private _onChangeCallback: (_: any) => void = noop;\n\n  /** internal attributes */\n  private _data: any[];\n  private _columns: ITdDataTableColumn[];\n  private _selectable: boolean = false;\n  private _multiple: boolean = true;\n\n  /** sorting */\n  private _sortable: boolean = false;\n  private _sortBy: ITdDataTableColumn;\n  private _sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending;\n\n  /** template fetching support */\n  private _templateMap: Map<string, TemplateRef<any>> = new Map<string, TemplateRef<any>>();\n  @ContentChildren(TdDataTableTemplateDirective) private _templates: QueryList<TdDataTableTemplateDirective>;\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  @Input() set value(v: any) {\n    if (v !== this._value) {\n      this._value = v;\n      this._onChangeCallback(v);\n    }\n  }\n  get value(): any { return this._value; };\n\n  /**\n   * uniqueId?: string\n   * Allows selection by [uniqueId] property.\n   */\n  @Input('uniqueId') uniqueId: string;\n\n  /**\n   * data?: {[key: string]: any}[]\n   * Sets the data to be rendered as rows.\n   */\n  @Input('data')\n  set data(data: Object[]) {\n    this._data = data;\n    this.refresh();\n  }\n\n  /**\n   * columns?: ITdDataTableColumn[]\n   * Sets additional column configuration. [ITdDataTableColumn.name] has to exist in [data] as key.\n   * Defaults to [data] keys.\n   */\n  @Input('columns')\n  set columns(cols: ITdDataTableColumn[]) {\n    this._columns = cols;\n  }\n  get columns(): ITdDataTableColumn[] {\n    if (this._columns) {\n      return this._columns;\n    }\n\n    if (this.hasData) {\n      this._columns = [];\n      // if columns is undefined, use key in [data] rows as name and label for column headers.\n      let row: any = this._data[0];\n      Object.keys(row).forEach((k: string) => {\n        if (!this._columns.find((c: any) => c.name === k)) {\n          this._columns.push({ name: k, label: k });\n        }\n      });\n      return this._columns;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * selectable?: boolean\n   * Enables row selection events, hover and selected row states.\n   * Defaults to 'false'\n   */\n  @Input('selectable')\n  set selectable(_selectable: string | boolean) {\n    this._selectable = _selectable !== '' ? (_selectable === 'true' || _selectable === true) : true;\n  }\n\n  /**\n   * multiple?: boolean\n   * Enables multiple row selection. [selectable] needs to be enabled.\n   * Defaults to 'false'\n   */\n  @Input('multiple')\n  set multiple(multiple: string | boolean) {\n    this._multiple = multiple !== '' ? (multiple === 'true' || multiple === true) : true;\n  }\n\n  /**\n   * sortable?: boolean\n   * Enables sorting events, sort icons and active column states.\n   * Defaults to 'false'\n   */\n  @Input('sortable')\n  set sortable(sortable: string | boolean) {\n    this._sortable = sortable !== '' ? (sortable === 'true' || sortable === true) : true;\n  }\n\n  /**\n   * sortBy?: string\n   * Sets the active sort column. [sortable] needs to be enabled.\n   */\n  @Input('sortBy')\n  set sortBy(columnName: string) {\n    if (!columnName) {\n      return;\n    }\n    const column: ITdDataTableColumn = this.columns.find((c: any) => c.name === columnName);\n    if (!column) {\n      throw new Error('[sortBy] must be a valid column name');\n    }\n\n    this._sortBy = column;\n  }\n\n  /**\n   * sortOrder?: ['ASC' | 'DESC'] or TdDataTableSortingOrder\n   * Sets the sort order of the [sortBy] column. [sortable] needs to be enabled.\n   * Defaults to 'ASC' or TdDataTableSortingOrder.Ascending\n   */\n  @Input('sortOrder')\n  set sortOrder(order: 'ASC' | 'DESC') {\n    let sortOrder: string = order ? order.toUpperCase() : 'ASC';\n    if (sortOrder !== 'DESC' && sortOrder !== 'ASC') {\n      throw new Error('[sortOrder] must be empty, ASC or DESC');\n    }\n\n    this._sortOrder = sortOrder === 'ASC' ?\n      TdDataTableSortingOrder.Ascending : TdDataTableSortingOrder.Descending;\n  }\n\n  get hasData(): boolean {\n    return this._data && this._data.length > 0;\n  }\n\n  /**\n   * sortChange?: function\n   * Event emitted when the column headers are clicked. [sortable] needs to be enabled.\n   * Emits an [ITdDataTableSortChangeEvent] implemented object.\n   */\n  @Output('sortChange') onSortChange: EventEmitter<ITdDataTableSortChangeEvent> =\n                                      new EventEmitter<ITdDataTableSortChangeEvent>();\n\n  /**\n   * rowSelect?: function\n   * Event emitted when a row is selected/deselected. [selectable] needs to be enabled.\n   * Emits an [ITdDataTableSelectEvent] implemented object.\n   */\n  @Output('rowSelect') onRowSelect: EventEmitter<ITdDataTableSelectEvent> = new EventEmitter<ITdDataTableSelectEvent>();\n\n  /**\n   * selectAll?: function\n   * Event emitted when all rows are selected/deselected by the all checkbox. [selectable] needs to be enabled.\n   * Emits an [ITdDataTableSelectAllEvent] implemented object.\n   */\n  @Output('selectAll') onSelectAll: EventEmitter<ITdDataTableSelectAllEvent> =\n                                    new EventEmitter<ITdDataTableSelectAllEvent>();\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n\n  /**\n   * Loads templates and sets them in a map for faster access.\n   */\n  ngAfterContentInit(): void {\n    for (let i: number = 0; i < this._templates.toArray().length; i++) {\n      this._templateMap.set(\n        this._templates.toArray()[i].tdDataTableTemplate,\n        this._templates.toArray()[i].templateRef,\n      );\n    }\n  }\n\n  getCellValue(column: ITdDataTableColumn, value: any): string {\n    if (column.nested === undefined || column.nested) {\n      return this._getNestedValue(column.name, value);\n    }\n    return value[column.name];\n  }\n\n  /**\n   * Getter method for template references\n   */\n   getTemplateRef(name: string): TemplateRef<any> {\n     return this._templateMap.get(name);\n   }\n\n  /**\n   * Clears model (ngModel) of component by removing all values in array.\n   */\n  clearModel(): void {\n    this._value.splice(0, this._value.length);\n  }\n\n  /**\n   * Refreshes data table and rerenders [data] and [columns]\n   */\n  refresh(): void {\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Workaround for https://github.com/angular/material2/issues/1825\n   */\n  tooltipRefresh(): void {\n    setTimeout(() => {\n      this.refresh();\n    }, 100);\n  }\n\n  /**\n   * Checks if all visible rows are selected.\n   */\n  areAllSelected(): boolean {\n    const match: string =\n      this._data.find((d: any) => !this.isRowSelected(d));\n    return typeof match === 'undefined';\n  }\n\n  /**\n   * Selects or clears all rows depending on 'checked' value.\n   */\n  selectAll(checked: boolean): void {\n    if (checked) {\n      this._data.forEach((row: any) => {\n        // skiping already selected rows\n        if (!this.isRowSelected(row)) {\n          this._value.push(row);\n        }\n      });\n    } else {\n      this.clearModel();\n    }\n    this.onSelectAll.emit({rows: this._value, selected: checked});\n  }\n\n  /**\n   * Checks if row is selected\n   */\n  isRowSelected(row: any): boolean {\n    // if selection is done by a [uniqueId] it uses it to compare, else it compares by reference.\n    if (this.uniqueId) {\n      return this._value ? this._value.filter((val: any) => {\n        return val[this.uniqueId] === row[this.uniqueId];\n      }).length > 0 : false;\n    }\n    return this._value ? this._value.indexOf(row) > -1 : false;\n  }\n\n  /**\n   * Selects or clears a row depending on 'checked' value\n   */\n  select(row: any, checked: boolean, event: Event): void {\n    event.preventDefault();\n    // clears all the fields for the dataset\n    if (!this._multiple) {\n      this.clearModel();\n    }\n\n    if (checked) {\n      this._value.push(row);\n    } else {\n      // if selection is done by a [uniqueId] it uses it to compare, else it compares by reference.\n      if (this.uniqueId) {\n        row = this._value.filter((val: any) => {\n          return val[this.uniqueId] === row[this.uniqueId];\n        })[0];\n      }\n      let index: number = this._value.indexOf(row);\n      if (index > -1) {\n        this._value.splice(index, 1);\n      }\n    }\n    this.onRowSelect.emit({row: row, selected: checked});\n    this.onChange(this._value);\n  }\n\n  /**\n   * Method handle for sort click event in column headers.\n   */\n  handleSort(column: ITdDataTableColumn): void {\n    if (this._sortBy === column) {\n      this._sortOrder = this._sortOrder === TdDataTableSortingOrder.Ascending ?\n        TdDataTableSortingOrder.Descending : TdDataTableSortingOrder.Ascending;\n    } else {\n      this._sortBy = column;\n      this._sortOrder = TdDataTableSortingOrder.Ascending;\n    }\n    this.onSortChange.next({ name: this._sortBy.name, order: this._sortOrder });\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  onChange = (_: any) => noop;\n  onTouched = () => noop;\n\n  private _getNestedValue(name: string, value: any): string {\n    if (!(value instanceof Object) || !name) {\n      return value;\n    }\n    if (name.indexOf('.') > -1) {\n      let splitName: string[] = name.split(/\\.(.+)/, 2);\n      return this._getNestedValue(splitName[1], value[splitName[0]]);\n    } else {\n      return value[name];\n    }\n  }\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}