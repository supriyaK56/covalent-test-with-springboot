{"version":3,"file":"data-table-column.component.js","sourceRoot":"","sources":["data-table-column.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, Output, EventEmitter, Renderer, ElementRef, HostBinding } from '@angular/core';\n\nimport { TdDataTableSortingOrder } from '../data-table.component';\n\nexport interface ITdDataTableSortChangeEvent {\n  order: TdDataTableSortingOrder;\n  name: string;\n}\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'th[td-data-table-column]',\n  styleUrls: ['./data-table-column.component.css'],\n  templateUrl: './data-table-column.component.html',\n})\nexport class TdDataTableColumnComponent {\n\n  private _sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending;\n\n  /**\n   * name?: string\n   * Sets unique column [name] for [sortable] events.\n   */\n  @Input('name') name: string = '';\n\n  /**\n   * sortable?: boolean\n   * Enables sorting events, sort icons and active column states.\n   * Defaults to 'false'\n   */\n  @Input('sortable') sortable: boolean = false;\n\n  /**\n   * active?: boolean\n   * Sets column to active state when 'true'.\n   * Defaults to 'false'\n   */\n  @Input('active') active: boolean = false;\n\n  /**\n   * numeric?: boolean\n   * Makes column follow the numeric data-table specs and sort icon.\n   * Defaults to 'false'\n   */\n  @Input('numeric') numeric: boolean = false;\n\n  /**\n   * sortOrder?: ['ASC' | 'DESC'] or TdDataTableSortingOrder\n   * Sets the sort order of column.\n   * Defaults to 'ASC' or TdDataTableSortingOrder.Ascending\n   */\n  @Input('sortOrder')\n  set sortOrder(order: 'ASC' | 'DESC') {\n    let sortOrder: string = order ? order.toUpperCase() : 'ASC';\n    if (sortOrder !== 'DESC' && sortOrder !== 'ASC') {\n      throw new Error('[sortOrder] must be empty, ASC or DESC');\n    }\n\n    this._sortOrder = sortOrder === 'ASC' ?\n      TdDataTableSortingOrder.Ascending : TdDataTableSortingOrder.Descending;\n  }\n\n  /**\n   * sortChange?: function\n   * Event emitted when the column headers are clicked. [sortable] needs to be enabled.\n   * Emits an [ITdDataTableSortChangeEvent] implemented object.\n   */\n  @Output('sortChange') onSortChange: EventEmitter<ITdDataTableSortChangeEvent> =\n                        new EventEmitter<ITdDataTableSortChangeEvent>();\n\n  @HostBinding('class.md-clickable')\n  get bindClickable(): boolean {\n    return this.sortable;\n  }\n\n  @HostBinding('class.md-sortable')\n  get bingSortable(): boolean {\n    return this.sortable;\n  }\n\n  @HostBinding('class.md-active')\n  get bindActive(): boolean {\n    return this.active;\n  }\n\n  @HostBinding('class.md-numeric')\n  get bindNumeric(): boolean {\n    return this.numeric;\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer) {\n    this._renderer.setElementClass(this._elementRef.nativeElement, 'td-data-table-column', true);\n  }\n\n  handleSortBy(): void {\n    this.onSortChange.emit({name: name, order: this._sortOrder});\n  }\n\n  isAscending(): boolean {\n    return this._sortOrder === TdDataTableSortingOrder.Ascending;\n  }\n\n  isDescending(): boolean {\n    return this._sortOrder === TdDataTableSortingOrder.Descending;\n  }\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}