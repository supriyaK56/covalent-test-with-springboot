{"version":3,"file":"abstract-chart.component.js","sourceRoot":"","sources":["abstract-chart.component.ts"],"names":[],"mappings":"AAGA,8BAA8B;AAC9B,IAAI,EAAE,GAAQ,OAAO,CAAC,IAAI,CAAC,CAAC;AAM5B;IAiBE,wBAAsB,OAA0B;QAA1B,YAAO,GAAP,OAAO,CAAmB;QAftC,iBAAY,GAAY,KAAK,CAAC;QAE9B,aAAQ,GAAW,EAAE,CAAC;QAc9B,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;IAC5B,CAAC;IAVD,sBAAI,6BAAC;aAAL;YACE,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;QACjB,CAAC;;;OAAA;IAED,sBAAI,6BAAC;aAAL;YACE,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;QACjB,CAAC;;;OAAA;IAMD,iCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,gCAAO,GAAP;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAES,gCAAO,GAAjB,UAAkB,IAAkB;QAClC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC;IACH,CAAC;IACS,mCAAU,GAApB,UAAqB,OAAe;QAClC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC;IACH,CAAC;IAES,kCAAS,GAAnB;QAAA,iBAiBC;QAhBC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACzB,IAAI,YAAY,GAAQ;gBACtB,IAAI,EAAE,EAAE,CAAC,IAAI;gBACb,GAAG,EAAE,EAAE,CAAC,GAAG;gBACX,GAAG,EAAE,EAAE,CAAC,GAAG;aACZ,CAAC;YACF,IAAI,WAAW,GAAW,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YACnF,YAAY,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAC,KAAa,EAAE,IAAS;gBAChE,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBAAC,MAAM,KAAK,CAAC;gBAAC,CAAC;gBAC3B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,IAAI,KAAK,CAAC,+DAA+D,CAAC,CAAC;QACnF,CAAC;IACH,CAAC;IAIH,qBAAC;AAAD,CAAC,AAhED,IAgEC","sourcesContent":["import { OnInit } from '@angular/core';\nimport { TdChartsComponent } from './charts.component';\n\n/* tslint:disable-next-line */\nlet d3: any = require('d3');\n\nexport interface IChartData {\n  [key: string]: any;\n}\n\nexport abstract class ChartComponent implements OnInit {\n\n  protected _initialized: boolean = false;\n\n  protected _dataSrc: string = '';\n  protected _data: IChartData[];\n  protected _x: any;\n  protected _y: any;\n\n  get x(): any {\n    return this._x;\n  }\n\n  get y(): any {\n    return this._y;\n  }\n\n  constructor(protected _parent: TdChartsComponent) {\n    this._parent.chartTotal++;\n  }\n\n  ngOnInit(): void {\n    this._initialized = true;\n    this.drawChart();\n  }\n\n  refresh(): void {\n    this.drawChart();\n  }\n\n  protected setData(data: IChartData[]): void {\n    this._data = data;\n    if (this._initialized) {\n      this.drawChart();\n    }\n  }\n  protected setDataSrc(dataSrc: string): void {\n    this._dataSrc = dataSrc;\n    if (this._initialized) {\n      this.drawChart();\n    }\n  }\n\n  protected drawChart(): void {\n    if (this._data) {\n      this.renderChart(this._data);\n    } else if (this._dataSrc) {\n      let parseContent: any = {\n        json: d3.json,\n        csv: d3.csv,\n        tsv: d3.tsv,\n      };\n      let contentType: string = this._dataSrc.substr(this._dataSrc.lastIndexOf('.') + 1);\n      parseContent[contentType](this._dataSrc, (error: string, data: any) => {\n        if (error) { throw error; }\n        this.renderChart(data);\n      });\n    } else {\n      throw new Error('[data] or [dataSrc] must be defined in [TdChartLineComponent]');\n    }\n  }\n\n  protected abstract renderChart(data: any): void;\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}