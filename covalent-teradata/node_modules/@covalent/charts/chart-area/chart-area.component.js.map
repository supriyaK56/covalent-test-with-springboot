{"version":3,"file":"chart-area.component.js","sourceRoot":"","sources":["chart-area.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, Inject, forwardRef } from '@angular/core';\nimport { PlatformLocation } from '@angular/common';\nimport { TdChartsComponent } from '../charts.component';\nimport { ChartComponent, IChartData } from '../abstract-chart.component';\n\n/* tslint:disable-next-line */\nlet d3: any = require('d3');\n\n@Component({\n  selector: 'td-chart-area',\n  styleUrls: ['./chart-area.component.css'],\n  templateUrl: './chart-area.component.html',\n})\nexport class TdChartAreaComponent extends ChartComponent {\n\n  @Input()\n  set dataSrc(dataSrc: string) {\n    super.setDataSrc(dataSrc);\n  }\n  @Input()\n  set data(data: IChartData[]) {\n    super.setData(data);\n  }\n  @Input() bottomAxis: string = '';\n  @Input() transition: boolean = true;\n  @Input() transitionDuration: number = 0;\n  @Input() transitionDelay: number = 0;\n  @Input() columns: string;\n  @Input() colors: string[] = ['#03a9f4', '#0277bd'];\n\n  constructor(@Inject(forwardRef(() => TdChartsComponent)) parent: TdChartsComponent,\n              private _platformLocation: PlatformLocation) {\n    super(parent);\n  }\n\n  renderChart(data: any): void {\n    let offset: number = this._parent.offset(data);\n\n    let x: any = d3.scaleLinear().range([offset / 2, this._parent.width - (offset / 2)]);\n    let y: any = d3.scaleLinear().range([this._parent.height, 0]);\n    this._x = x;\n    this._y = y;\n\n    let area: any = d3.area()\n      .x((d: any) => { return x(d[this.bottomAxis]); })\n      .y0(this._parent.height)\n      .y1((d: any) => { return y(d[this.columns]); })\n      .curve(d3.curveCardinal);\n\n    let valueline: any = d3.line()\n        .x((d: any) => { return x(d[this.bottomAxis]); })\n        .y((d: any) => { return y(d[this.columns]); });\n\n    data.forEach((d: any) => {\n        d[this.bottomAxis] = d[this.bottomAxis];\n        d[this.columns] = +d[this.columns];\n    });\n\n    x.domain([\n      d3.min(data, (d: any) => { return d[this.bottomAxis]; }),\n      d3.max(data, (d: any) => { return d[this.bottomAxis]; }),\n    ]);\n    y.domain([0, d3.max(data, (d: any) => { return d[this.columns]; })]);\n\n    let defsId: string = this._parent.drawContainer();\n\n    let svg: any = d3.select(this._parent.container).selectAll('.chartG');\n\n    if (d3.select('#rectClip rect').size() === 0) {\n      svg.append('clipPath')\n      .attr('id', 'rectClip')\n      .append('rect')\n        .attr('width', 0)\n        .attr('height', this._parent.height);\n    }\n\n    if (this.transition === true) {\n      d3.select('#rectClip rect')\n      .transition().duration(this.transitionDuration)\n      .delay(this.transitionDelay)\n      .attr('width', this._parent.width);\n    } else {\n      d3.select('#rectClip rect')\n      .attr('width', this._parent.width);\n    }\n\n    svg.append('g')\n      .classed('chart-area', true);\n\n    d3.select(this._parent.container).selectAll('.chart-area')\n      .append('path')\n      .data([data])\n      .attr('class', 'area')\n      .attr('fill', this.colors[0])\n      .attr('stroke', this.colors[1])\n      .attr('d', area)\n      .attr('clip-path', 'url(' + this._platformLocation.pathname + '#rectClip)')\n      .style('filter', 'url(' + this._platformLocation.pathname + '#' + defsId + ')');\n\n    d3.select(this._parent.container).selectAll('.chart-area')\n      .append('path')\n      .data([data])\n      .attr('class', 'line')\n      .attr('d', valueline)\n      .attr('clip-path', 'url(' + this._platformLocation.pathname + '#rectClip)')\n      .style('filter', 'url(' + this._platformLocation.pathname + '#' + defsId + ')');\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}